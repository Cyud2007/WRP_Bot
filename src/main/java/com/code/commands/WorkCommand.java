package com.code.commands;

import java.awt.Color;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;

import org.jetbrains.annotations.NotNull;

import com.code.data.UserData;
import com.code.data.UserDataManager;

import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;
import net.dv8tion.jda.api.interactions.commands.build.CommandData;
import net.dv8tion.jda.api.interactions.commands.build.Commands;

public class WorkCommand extends Command {

    @Override
    public CommandData createCommand() {
        return Commands.slash("work", "–í—ã–¥–∞–µ—Ç 2000 –º–æ–Ω–µ—Ç —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏.");
    }

    @Override
    public void execute(@NotNull SlashCommandInteractionEvent event) {
        String username = event.getUser().getName();
        UserData userData = UserDataManager.getUserData(username);

        LocalDateTime now = LocalDateTime.now(ZoneId.of("Europe/Kiev"));

        if (userData.getLastJobTime().until(now, ChronoUnit.DAYS) >= 1) {
            userData.setBalance(userData.getBalance() + 2000);
            userData.setLastJobTime(now);
            UserDataManager.updateUserData(userData);

            EmbedBuilder embed = new EmbedBuilder();
            embed.setColor(Color.GREEN);
            embed.setTitle("üí∞ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ —É—Å–ø–µ—à–µ–Ω!");
            embed.setDescription("–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 2000 –º–æ–Ω–µ—Ç.");
            embed.addField("–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å", userData.getBalance() + " –º–æ–Ω–µ—Ç", false);
            embed.setTimestamp(now);

            event.replyEmbeds(embed.build()).queue();
        } else {
            EmbedBuilder embed = new EmbedBuilder();
            embed.setColor(Color.RED);
            embed.setTitle("‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ!");
            embed.setDescription("–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É–Ω–æ—á–∏.");
            embed.setTimestamp(now);

            event.replyEmbeds(embed.build()).queue();
        }
    }
}
